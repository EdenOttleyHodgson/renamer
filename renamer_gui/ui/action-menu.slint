import {S_Action, S_Preset} from "./structs.slint";
import {ComboBox, Button, CheckBox} from "std-widgets.slint";
export component ActionMenu inherits Rectangle{
  callback on_confirm( S_Action);
  callback on_cancel;
  property <S_Preset> preset: preset-from-string(selector.current-value);
  pure function preset-from-string(inp: string) -> S_Preset {
    if inp == "Randomize" {
      return S_Preset.randomize;
    }
    return S_Preset.custom; 
  } 
  function make_s_action() -> S_Action{
    return {
      id: -1,
      pattern: input.text,
      preset: preset,
      options: {
        overwrite: overwrite-check.checked,
        preserve-file-extension: preserve-check.checked
      }
    };
  }
  states [
      active when preset == S_Preset.custom : {
        input-rect.visible: true;
      }
      active when preset != S_Preset.custom: {
        input-rect.visible: false;

      }
  ]
  VerticalLayout {
    y: (root.height / 2) - (self.height / 2);
    padding: 10px;
    selector := ComboBox {
      max-height: parent.height *0.1;
      model: ["Randomize", "Custom"]; 
      padding: 5px;
    }
    input-rect:= Rectangle {
      max-height: parent.height *0.1;
      border-color: black;
      background: black; 
      padding: 5px;
      input := TextInput { 
      }
    }
    overwrite-check:= CheckBox {
      text: "Overwrite";
    }
    preserve-check:= CheckBox {
      text: "Preserve File Extension";
    }
   
    HorizontalLayout {
      max-height: parent.height * 0.1;
      max-width: parent.width;
      padding: 5px;
      Button { 
        max-width: parent.width;
        padding: 5px;
        text: "Confirm";
        clicked => {root.on_confirm( make_s_action())} 
      }
      Button {
        max-width: parent.width;
        padding: 5px;
        text: "Cancel";
        clicked => {root.on_cancel()}
      }
    }
  }
}
