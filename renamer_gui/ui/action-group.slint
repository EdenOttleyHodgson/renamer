import {S_ActionGroup, S_File, S_Action, S_Preset} from "./structs.slint";
import {Button, ListView} from "std-widgets.slint";
component FileComponent {
  in property <S_File> file;
  callback on_remove_file(int);
  padding: 5px;
  HorizontalLayout {
    padding: 5px;
    Text {
      text: file.path;
      vertical-alignment:center;
      horizontal-alignment: center;
    }
    Button {
      text: "Remove";
      clicked => {root.on_remove_file(file.id)}
    }
  }

}
component ActionComponent {
  in property <S_Action> action;
  padding: 5px;
  callback on_remove_action(int);
  function preset_text() -> string {
    if action.preset == S_Preset.randomize {
      return "Randomize";
    } else if action.preset == S_Preset.custom {
      return "Custom";
    } else {
      return "Unrecognized Preset";
    }
  }
  function pattern_text() -> string {
    if action.pattern == "" && action.preset != S_Preset.custom {
      return "Preset Pattern";
    } else {
      return action.pattern;
    }

  }
  HorizontalLayout {
    padding: 5px;
    VerticalLayout {
      Text {
        text: preset_text();
        vertical-alignment:center;
        horizontal-alignment: center;
      }
      Text {
        text: pattern_text();
        vertical-alignment:center;
        horizontal-alignment: center;
      }
    }
    Button {
        clicked => {
          root.on_remove_action(action.id)
        }
        text: "Remove";
    }
    }
}
export component ActionGroupComponent inherits VerticalLayout {
  in property <S_ActionGroup> action_group;
  out property <length> file-column-location <=> file-layout.x;
  out property <length> action-column-location <=> action-layout.x;
  in property <bool> display_title;
  callback on_remove_action(int, int);
  callback on_add_action(int);
  callback on_add_file(int);
  callback on_remove_file(int, int);
  callback on_remove_self();
  padding: 5px;
  
  HorizontalLayout {
    padding: 5px;
    file-layout := VerticalLayout {
      padding: 5px;
      width: 50%;
      if display_title:
      Text {
        text: "Files";
        horizontal-alignment: center;
        font-size: 18pt;
      }
        ListView {
          for file[i] in action_group.files: FileComponent {
            file: file;
            on_remove_file(file_id) => {
              root.on_remove_file(action_group.id, file_id)
            } 
          }
        }
      Button {
        text: "Add";
        clicked => {
          root.on_add_file(action_group.id)
        }
      }
    }
    action-layout:= VerticalLayout {
      padding: 5px;
      width: 50%;
      if display_title:
      Text {
        text: "Actions";
        horizontal-alignment: center;
        font-size: 18pt;
      }
      ListView {
        for action[i] in action_group.actions: ActionComponent {
          action: action;
          on_remove_action(action_id) => {
            root.on_remove_action(action_group.id, action-id)
          }
        }
      }
      Button {
        text: "Add";
        clicked => {
          root.on_add_action(action_group.id)
        }
      }
    }
    
  }
  Button {
      text: "Remove Action Group"; 
      clicked => {
        root.on_remove_self()
      }
  }
  Rectangle {
    height: 1px;
    width: parent.width;
    border-color: black;
    border-width: 2px;
  }
}


